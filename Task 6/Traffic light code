#include <ch32v00x.h>
#include <debug.h>

#define RED_LED_PORT GPIOD
#define RED_LED_PIN GPIO_Pin_5
#define ORANGE_LED_PORT GPIOC
#define ORANGE_LED_PIN GPIO_Pin_2
#define GREEN_LED_PORT GPIOC
#define GREEN_LED_PIN GPIO_Pin_1
#define BLUE_LED_PORT GPIOC
#define BLUE_LED_PIN GPIO_Pin_0

#define RED_BUTTON_PORT GPIOD
#define RED_BUTTON_PIN GPIO_Pin_1
#define ORANGE_BUTTON_PORT GPIOD
#define ORANGE_BUTTON_PIN GPIO_Pin_2
#define GREEN_BUTTON_PORT GPIOD
#define GREEN_BUTTON_PIN GPIO_Pin_3
#define BLUE_BUTTON_PORT GPIOD
#define BLUE_BUTTON_PIN GPIO_Pin_4

#define LED_CLOCK_ENABLE RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE); RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
#define BUTTON_CLOCK_ENABLE RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);

void Delay_Init(void);
void Delay_Ms(uint32_t n);
void Traffic_Light_Default(void);

int main(void)
{
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
    SystemCoreClockUpdate();
    Delay_Init();

    GPIO_InitTypeDef GPIO_InitStructure = {0};

    LED_CLOCK_ENABLE;
    BUTTON_CLOCK_ENABLE;

    // Configure LEDs as output
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    
    GPIO_InitStructure.GPIO_Pin = RED_LED_PIN;
    GPIO_Init(RED_LED_PORT, &GPIO_InitStructure);
    
    GPIO_InitStructure.GPIO_Pin = ORANGE_LED_PIN;
    GPIO_Init(ORANGE_LED_PORT, &GPIO_InitStructure);
    
    GPIO_InitStructure.GPIO_Pin = GREEN_LED_PIN;
    GPIO_Init(GREEN_LED_PORT, &GPIO_InitStructure);
    
    GPIO_InitStructure.GPIO_Pin = BLUE_LED_PIN;
    GPIO_Init(BLUE_LED_PORT, &GPIO_InitStructure);
    
    // Configure Buttons as input with pull-down resistors
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
    
    GPIO_InitStructure.GPIO_Pin = RED_BUTTON_PIN;
    GPIO_Init(RED_BUTTON_PORT, &GPIO_InitStructure);
    
    GPIO_InitStructure.GPIO_Pin = ORANGE_BUTTON_PIN;
    GPIO_Init(ORANGE_BUTTON_PORT, &GPIO_InitStructure);
    
    GPIO_InitStructure.GPIO_Pin = GREEN_BUTTON_PIN;
    GPIO_Init(GREEN_BUTTON_PORT, &GPIO_InitStructure);
    
    GPIO_InitStructure.GPIO_Pin = BLUE_BUTTON_PIN;
    GPIO_Init(BLUE_BUTTON_PORT, &GPIO_InitStructure);

    while (1)
    {
        if (GPIO_ReadInputDataBit(RED_BUTTON_PORT, RED_BUTTON_PIN))
        {
            GPIO_SetBits(RED_LED_PORT, RED_LED_PIN);
            GPIO_ResetBits(ORANGE_LED_PORT, ORANGE_LED_PIN);
            GPIO_ResetBits(GREEN_LED_PORT, GREEN_LED_PIN);
            GPIO_ResetBits(BLUE_LED_PORT, BLUE_LED_PIN);
        }
        else if (GPIO_ReadInputDataBit(ORANGE_BUTTON_PORT, ORANGE_BUTTON_PIN))
        {
            GPIO_ResetBits(RED_LED_PORT, RED_LED_PIN);
            GPIO_SetBits(ORANGE_LED_PORT, ORANGE_LED_PIN);
            GPIO_ResetBits(GREEN_LED_PORT, GREEN_LED_PIN);
            GPIO_ResetBits(BLUE_LED_PORT, BLUE_LED_PIN);
        }
        else if (GPIO_ReadInputDataBit(GREEN_BUTTON_PORT, GREEN_BUTTON_PIN))
        {
            GPIO_ResetBits(RED_LED_PORT, RED_LED_PIN);
            GPIO_ResetBits(ORANGE_LED_PORT, ORANGE_LED_PIN);
            GPIO_SetBits(GREEN_LED_PORT, GREEN_LED_PIN);
            GPIO_ResetBits(BLUE_LED_PORT, BLUE_LED_PIN);
        }
        else if (GPIO_ReadInputDataBit(BLUE_BUTTON_PORT, BLUE_BUTTON_PIN))
        {
            Traffic_Light_Default();
        }
    }
}

void Traffic_Light_Default(void)
{
    GPIO_SetBits(BLUE_LED_PORT, BLUE_LED_PIN);
    GPIO_SetBits(RED_LED_PORT, RED_LED_PIN);
    Delay_Ms(500);
    GPIO_ResetBits(RED_LED_PORT, RED_LED_PIN);
    GPIO_SetBits(ORANGE_LED_PORT, ORANGE_LED_PIN);
    Delay_Ms(200);
    GPIO_ResetBits(ORANGE_LED_PORT, ORANGE_LED_PIN);
    GPIO_SetBits(GREEN_LED_PORT, GREEN_LED_PIN);
    Delay_Ms(300);
    GPIO_ResetBits(GREEN_LED_PORT, GREEN_LED_PIN);
    GPIO_ResetBits(BLUE_LED_PORT, BLUE_LED_PIN);
}
